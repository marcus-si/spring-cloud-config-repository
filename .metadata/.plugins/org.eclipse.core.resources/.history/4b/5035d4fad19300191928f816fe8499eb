package com.example.springcloudnacosconsumer;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.client.ServiceInstance;
import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
import org.springframework.cloud.client.loadbalancer.LoadBalancerClient;
import org.springframework.cloud.openfeign.EnableFeignClients;
import org.springframework.context.annotation.Bean;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.example.springcloudnacosfeignapi.NacosFeign;


@SpringBootApplication
@EnableDiscoveryClient
@EnableFeignClients(basePackages = "com.example.springcloudspringcloudnacosfeignapi")
public class SpringCloudNacosConsumerApplication {
	
	@RestController
	public class NacosConsumerController{
		@Autowired
		private LoadBalancerClient loadBalancerClient;
		@Autowired
		private RestTemplate restTemplate;
		@Value("${spring.application.name}")
		private String appName;
		@Autowired
		private NacosFeign nacosFeign;

		@GetMapping("/echo/app-name")
		public String echoAppName() {
			ServiceInstance serviceInstance = loadBalancerClient.choose("nacos-producer");
			String path = String.format("http://%s:%s/echo/%s", serviceInstance.getHost(), serviceInstance.getPort(), appName);
			System.out.println("Request path:" + path);
			return restTemplate.getForObject(path, String.class);
		}
		
		@GetMapping("/echo/provider-name")
		public String getProviderName() {
			return nacosFeign.getProviderName();
		}
		
		
	}	
	@Bean
	public RestTemplate restTemplate() {
		return new RestTemplate();
	}
	
	public static void main(String[] args) {
		SpringApplication.run(SpringCloudNacosConsumerApplication.class, args);
	}

}
